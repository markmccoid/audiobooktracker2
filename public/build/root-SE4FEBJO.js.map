{
  "version": 3,
  "sources": ["../../app/root.tsx"],
  "sourcesContent": ["import {\n  ErrorBoundaryComponent,\n  LinksFunction,\n  LoaderFunction,\n  MetaFunction,\n  redirect,\n} from \"@remix-run/node\";\n\nimport { json } from \"@remix-run/node\";\nimport {\n  CatchBoundaryComponent,\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n  useLoaderData,\n} from \"@remix-run/react\";\nimport { getAllAudiobooks, initialBookLoad } from \"./data/audiobookGet.server\";\nimport styles from \"./styles/app.css\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n\n// type LoaderData = {\n//   books: Awaited<ReturnType<typeof getAllAudiobooks>>;\n// };\n\nexport const loader: LoaderFunction = () => {\n  // initialBookLoad();\n  console.log(\"Root Loader Run\");\n\n  return null;\n};\n\nexport const links: LinksFunction = () => {\n  return [\n    {\n      rel: \"stylesheet\",\n      href: styles,\n    },\n  ];\n};\n\nexport const ErrorBoundary: ErrorBoundaryComponent = ({ error }) => {\n  console.log(\"Error Boundary\", error);\n  return (\n    <main>\n      <div>\n        <h1>Uncaught Error Boundary</h1>\n        <h2>{error.message}</h2>\n      </div>\n    </main>\n  );\n};\n\nexport const CatchBoundary: CatchBoundaryComponent = () => {\n  const caughtResponse = useCatch();\n\n  console.log(\"catchboundary\", caughtResponse);\n  return (\n    <main>\n      <div>\n        <h1>Uncaught Error Catch</h1>\n        <h2>{caughtResponse?.statusText}</h2>\n        <h2>{caughtResponse.data?.message}</h2>\n      </div>\n    </main>\n  );\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAiCQ;AAVD,IAAM,OAAqB,OAAO;AAAA,EACvC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AACZ;AAEe,SAAR,MAAuB;AAC5B,SACE,mDAAC,UAAK,MAAK,MACT;AAAA,uDAAC,UACC;AAAA,yDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,mDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,SAFT;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,mDAAC,UACC;AAAA,yDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,MACR,mDAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB,mDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MACT,mDAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,aAAY;AAAA,SAJd;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,OAVF;AAAA;AAAA;AAAA;AAAA,SAWA;AAEJ;AAaO,IAAM,QAAuB,MAAM;AACxC,SAAO;AAAA,IACL;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA,IACR;AAAA,EACF;AACF;AAEO,IAAM,gBAAwC,CAAC,EAAE,MAAM,MAAM;AAClE,UAAQ,IAAI,kBAAkB,KAAK;AACnC,SACE,mDAAC,UACC,6DAAC,SACC;AAAA,uDAAC,QAAG,uCAAJ;AAAA;AAAA;AAAA;AAAA,WAA2B;AAAA,IAC3B,mDAAC,QAAI,gBAAM,WAAX;AAAA;AAAA;AAAA;AAAA,WAAmB;AAAA,OAFrB;AAAA;AAAA;AAAA;AAAA,SAGA,KAJF;AAAA;AAAA;AAAA;AAAA,SAKA;AAEJ;AAEO,IAAM,gBAAwC,MAAM;AA9E3D;AA+EE,QAAM,iBAAiB,SAAS;AAEhC,UAAQ,IAAI,iBAAiB,cAAc;AAC3C,SACE,mDAAC,UACC,6DAAC,SACC;AAAA,uDAAC,QAAG,oCAAJ;AAAA;AAAA;AAAA;AAAA,WAAwB;AAAA,IACxB,mDAAC,QAAI,2DAAgB,cAArB;AAAA;AAAA;AAAA;AAAA,WAAgC;AAAA,IAChC,mDAAC,QAAI,+BAAe,SAAf,mBAAqB,WAA1B;AAAA;AAAA;AAAA;AAAA,WAAkC;AAAA,OAHpC;AAAA;AAAA;AAAA;AAAA,SAIA,KALF;AAAA;AAAA;AAAA;AAAA,SAMA;AAEJ;",
  "names": []
}
