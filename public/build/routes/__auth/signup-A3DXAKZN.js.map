{
  "version": 3,
  "sources": ["../../../../app/routes/__auth/signup.tsx"],
  "sourcesContent": ["import { Form, useActionData } from \"@remix-run/react\";\r\nimport { useState, useReducer } from \"react\";\r\nimport { json, ActionFunction } from \"@remix-run/node\";\r\nimport { signup, RegisterServerErrors } from \"~/data/auth.server\";\r\nimport { authFormValidation } from \"~/utils/validation\";\r\nimport type { AuthFormData } from \"~/types/authTypes\";\r\nimport InputField from \"~/components/input/InputField\";\r\n\r\n//-------------------------------------------------\r\n//-- Action Error Type\r\n//-- Union errors type from server and validation error types\r\n// -------------------------------------------------\r\nexport type ActionErrors =\r\n  | RegisterServerErrors\r\n  | {\r\n      name: \"Validation Errors\";\r\n      email?: string;\r\n      password?: string;\r\n    };\r\n\r\n//-------------------------------------------------\r\n//-- Action Function\r\n// -------------------------------------------------\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  // standard request object has our formData object on it\r\n  const formData = await request.formData();\r\n  const formFields = Object.fromEntries(formData) as AuthFormData;\r\n\r\n  // Local validation\r\n  const validationErrors = authFormValidation({\r\n    email: formFields.email,\r\n    password: formFields.password,\r\n  });\r\n\r\n  if (validationErrors) {\r\n    return json({\r\n      name: \"Validation Errors\",\r\n      email: validationErrors.email?._errors.join(\"-\"),\r\n      password: validationErrors.password?._errors.join(\"-\"),\r\n    });\r\n  }\r\n\r\n  try {\r\n    // Sign up / Register to the service\r\n    await signup({ email: formFields.email, password: formFields.password });\r\n  } catch (error) {\r\n    if (error instanceof Error) {\r\n      let errorObj = error as RegisterServerErrors;\r\n      if (errorObj.name === \"Email Exists\") return json(error);\r\n    }\r\n    throw new Error(String(error));\r\n  }\r\n};\r\n\r\n//-------------------------------------------------\r\n//-- SignUp COMPONENT\r\n// -------------------------------------------------\r\nexport const Signup = () => {\r\n  const [pwVisible, togglePwVisible] = useReducer((state) => {\r\n    return !state;\r\n  }, false);\r\n\r\n  const actionData = useActionData<ActionErrors>();\r\n  console.log(\"actionData\", actionData);\r\n  return (\r\n    <div className=\"flex flex-col flex-grow border border-black justify-center items-center\">\r\n      <h1 className=\"text-3xl mb-4\">Register for Audiobook Tracker</h1>\r\n      {actionData?.name === \"Email Exists\" && <div>{actionData.message}</div>}\r\n      <Form\r\n        method=\"post\"\r\n        className=\"flex flex-col rounded-lg p-6 w-96 bg-gray-400\"\r\n      >\r\n        <InputField\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          type=\"text\"\r\n          error={\r\n            actionData?.name === \"Validation Errors\"\r\n              ? actionData?.email\r\n              : undefined\r\n          }\r\n        />\r\n        <InputField\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          type=\"passwordWpeek\"\r\n          error={\r\n            actionData?.name === \"Validation Errors\"\r\n              ? actionData?.password\r\n              : undefined\r\n          }\r\n        />\r\n\r\n        <div className=\"w-full text-center\">\r\n          <button\r\n            type=\"submit\"\r\n            name=\"button\"\r\n            value=\"signup\"\r\n            className=\"rounded-lg bg-emerald-800 px-3 py-2 text-xl text-white\"\r\n          >\r\n            Sign Up\r\n          </button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],
  "mappings": ";;;;;;;;;;;;;;;AACA,IAAAA,gBAAqC;AAErC,kBAA6C;AA+DvC;AATC,IAAM,SAAS,MAAM;AAC1B,QAAM,CAAC,WAAW,eAAe,QAAI,0BAAW,CAAC,UAAU;AACzD,WAAO,CAAC;AAAA,EACV,GAAG,KAAK;AAER,QAAM,aAAa,cAA4B;AAC/C,UAAQ,IAAI,cAAc,UAAU;AACpC,SACE,mDAAC,SAAI,WAAU,2EACb;AAAA,uDAAC,QAAG,WAAU,iBAAgB,8CAA9B;AAAA;AAAA;AAAA;AAAA,WAA4D;AAAA,KAC3D,yCAAY,UAAS,kBAAkB,mDAAC,SAAK,qBAAW,WAAjB;AAAA;AAAA;AAAA;AAAA,WAAyB;AAAA,IACjE;AAAA,MAAC;AAAA;AAAA,QACC,QAAO;AAAA,QACP,WAAU;AAAA,QAEV;AAAA;AAAA,YAAC;AAAA;AAAA,cACC,OAAM;AAAA,cACN,MAAK;AAAA,cACL,MAAK;AAAA,cACL,QACE,yCAAY,UAAS,sBACjB,yCAAY,QACZ;AAAA;AAAA,YAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UASA;AAAA,UACA;AAAA,YAAC;AAAA;AAAA,cACC,OAAM;AAAA,cACN,MAAK;AAAA,cACL,MAAK;AAAA,cACL,QACE,yCAAY,UAAS,sBACjB,yCAAY,WACZ;AAAA;AAAA,YAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UASA;AAAA,UAEA,mDAAC,SAAI,WAAU,sBACb;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,MAAK;AAAA,cACL,OAAM;AAAA,cACN,WAAU;AAAA,cACX;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAOA,KARF;AAAA;AAAA;AAAA;AAAA,iBASA;AAAA;AAAA;AAAA,MAlCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAmCA;AAAA,OAtCF;AAAA;AAAA;AAAA;AAAA,SAuCA;AAEJ;AAEA,IAAO,iBAAQ;",
  "names": ["import_react"]
}
